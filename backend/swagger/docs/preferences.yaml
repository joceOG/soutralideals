# üéØ DOCUMENTATION SWAGGER - PR√âF√âRENCES UTILISATEURS

paths:
  /api/preferences:
    post:
      tags:
        - Pr√©f√©rences
      summary: "üéØ Cr√©er ou mettre √† jour les pr√©f√©rences utilisateur"
      description: "Cr√©er de nouvelles pr√©f√©rences ou mettre √† jour les pr√©f√©rences existantes d'un utilisateur"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - utilisateurId
              properties:
                utilisateurId:
                  type: string
                  description: "ID de l'utilisateur"
                  example: "64f1a2b3c4d5e6f7g8h9i0j1"
                langue:
                  type: string
                  enum: [fr, en, es, de, it, pt]
                  description: "Langue pr√©f√©r√©e"
                  example: "fr"
                devise:
                  type: string
                  enum: [XOF, EUR, USD, GBP, CAD]
                  description: "Devise pr√©f√©r√©e"
                  example: "XOF"
                pays:
                  type: string
                  description: "Pays de l'utilisateur"
                  example: "C√¥te d'Ivoire"
                fuseauHoraire:
                  type: string
                  description: "Fuseau horaire"
                  example: "Africa/Abidjan"
                formatDate:
                  type: string
                  enum: [DD/MM/YYYY, MM/DD/YYYY, YYYY-MM-DD]
                  description: "Format de date pr√©f√©r√©"
                  example: "DD/MM/YYYY"
                formatHeure:
                  type: string
                  enum: [24h, 12h]
                  description: "Format d'heure pr√©f√©r√©"
                  example: "24h"
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                      description: "Notifications par email"
                      example: true
                    push:
                      type: boolean
                      description: "Notifications push"
                      example: true
                    sms:
                      type: boolean
                      description: "Notifications SMS"
                      example: false
                theme:
                  type: string
                  enum: [light, dark, auto]
                  description: "Th√®me d'affichage"
                  example: "light"
                confidentialite:
                  type: object
                  properties:
                    profilPublic:
                      type: boolean
                      description: "Profil public"
                      example: false
                    partageDonnees:
                      type: boolean
                      description: "Partage des donn√©es"
                      example: false
      responses:
        200:
          description: "Pr√©f√©rences cr√©√©es/mises √† jour avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Pr√©f√©rences mises √† jour avec succ√®s"
                  data:
                    $ref: '#/components/schemas/UserPreferences'
        400:
          description: "Donn√©es invalides"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: "Non authentifi√©"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erreur serveur"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/user/{utilisateurId}:
    get:
      tags:
        - Pr√©f√©rences
      summary: "üìã R√©cup√©rer les pr√©f√©rences d'un utilisateur"
      description: "R√©cup√©rer toutes les pr√©f√©rences d'un utilisateur sp√©cifique"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      responses:
        200:
          description: "Pr√©f√©rences r√©cup√©r√©es avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserPreferences'
        404:
          description: "Pr√©f√©rences non trouv√©es"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: "Non authentifi√©"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Pr√©f√©rences
      summary: "üîÑ Mettre √† jour les pr√©f√©rences d'un utilisateur"
      description: "Mettre √† jour compl√®tement les pr√©f√©rences d'un utilisateur"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                langue:
                  type: string
                  enum: [fr, en, es, de, it, pt]
                  description: "Langue pr√©f√©r√©e"
                  example: "fr"
                devise:
                  type: string
                  enum: [XOF, EUR, USD, GBP, CAD]
                  description: "Devise pr√©f√©r√©e"
                  example: "XOF"
                pays:
                  type: string
                  description: "Pays de l'utilisateur"
                  example: "C√¥te d'Ivoire"
                fuseauHoraire:
                  type: string
                  description: "Fuseau horaire"
                  example: "Africa/Abidjan"
                formatDate:
                  type: string
                  enum: [DD/MM/YYYY, MM/DD/YYYY, YYYY-MM-DD]
                  description: "Format de date pr√©f√©r√©"
                  example: "DD/MM/YYYY"
                formatHeure:
                  type: string
                  enum: [24h, 12h]
                  description: "Format d'heure pr√©f√©r√©"
                  example: "24h"
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                      description: "Notifications par email"
                      example: true
                    push:
                      type: boolean
                      description: "Notifications push"
                      example: true
                    sms:
                      type: boolean
                      description: "Notifications SMS"
                      example: false
                theme:
                  type: string
                  enum: [light, dark, auto]
                  description: "Th√®me d'affichage"
                  example: "light"
                confidentialite:
                  type: object
                  properties:
                    profilPublic:
                      type: boolean
                      description: "Profil public"
                      example: false
                    partageDonnees:
                      type: boolean
                      description: "Partage des donn√©es"
                      example: false
      responses:
        200:
          description: "Pr√©f√©rences mises √† jour avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Pr√©f√©rences mises √† jour avec succ√®s"
                  data:
                    $ref: '#/components/schemas/UserPreferences'
        400:
          description: "Donn√©es invalides"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: "Utilisateur non trouv√©"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Pr√©f√©rences
      summary: "üóëÔ∏è Supprimer les pr√©f√©rences d'un utilisateur"
      description: "Supprimer d√©finitivement les pr√©f√©rences d'un utilisateur"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      responses:
        200:
          description: "Pr√©f√©rences supprim√©es avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Pr√©f√©rences supprim√©es avec succ√®s"
        404:
          description: "Pr√©f√©rences non trouv√©es"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/user/{utilisateurId}/language:
    patch:
      tags:
        - Pr√©f√©rences
      summary: "üåç Changer la langue d'un utilisateur"
      description: "Mettre √† jour uniquement la langue pr√©f√©r√©e d'un utilisateur"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - langue
              properties:
                langue:
                  type: string
                  enum: [fr, en, es, de, it, pt]
                  description: "Nouvelle langue pr√©f√©r√©e"
                  example: "en"
      responses:
        200:
          description: "Langue mise √† jour avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Langue mise √† jour avec succ√®s"
                  data:
                    type: object
                    properties:
                      langue:
                        type: string
                        example: "en"
        400:
          description: "Langue invalide"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/user/{utilisateurId}/currency:
    patch:
      tags:
        - Pr√©f√©rences
      summary: "üí∞ Changer la devise d'un utilisateur"
      description: "Mettre √† jour uniquement la devise pr√©f√©r√©e d'un utilisateur"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - devise
              properties:
                devise:
                  type: string
                  enum: [XOF, EUR, USD, GBP, CAD]
                  description: "Nouvelle devise pr√©f√©r√©e"
                  example: "EUR"
      responses:
        200:
          description: "Devise mise √† jour avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Devise mise √† jour avec succ√®s"
                  data:
                    type: object
                    properties:
                      devise:
                        type: string
                        example: "EUR"
        400:
          description: "Devise invalide"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/user/{utilisateurId}/country:
    patch:
      tags:
        - Pr√©f√©rences
      summary: "üåç Changer le pays d'un utilisateur"
      description: "Mettre √† jour uniquement le pays d'un utilisateur"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pays
              properties:
                pays:
                  type: string
                  description: "Nouveau pays"
                  example: "France"
                fuseauHoraire:
                  type: string
                  description: "Nouveau fuseau horaire"
                  example: "Europe/Paris"
      responses:
        200:
          description: "Pays mis √† jour avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Pays mis √† jour avec succ√®s"
                  data:
                    type: object
                    properties:
                      pays:
                        type: string
                        example: "France"
                      fuseauHoraire:
                        type: string
                        example: "Europe/Paris"
        400:
          description: "Donn√©es invalides"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/user/{utilisateurId}/reset:
    patch:
      tags:
        - Pr√©f√©rences
      summary: "üîÑ R√©initialiser les pr√©f√©rences d'un utilisateur"
      description: "Remettre les pr√©f√©rences d'un utilisateur aux valeurs par d√©faut"
      security:
        - bearerAuth: []
      parameters:
        - name: utilisateurId
          in: path
          required: true
          schema:
            type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
      responses:
        200:
          description: "Pr√©f√©rences r√©initialis√©es avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Pr√©f√©rences r√©initialis√©es avec succ√®s"
                  data:
                    $ref: '#/components/schemas/UserPreferences'
        404:
          description: "Utilisateur non trouv√©"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/admin:
    get:
      tags:
        - Pr√©f√©rences
      summary: "üìä R√©cup√©rer toutes les pr√©f√©rences (Admin)"
      description: "R√©cup√©rer toutes les pr√©f√©rences de tous les utilisateurs (r√©serv√© aux administrateurs)"
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: "Num√©ro de page"
          example: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: "Nombre d'√©l√©ments par page"
          example: 10
        - name: langue
          in: query
          schema:
            type: string
            enum: [fr, en, es, de, it, pt]
          description: "Filtrer par langue"
          example: "fr"
        - name: devise
          in: query
          schema:
            type: string
            enum: [XOF, EUR, USD, GBP, CAD]
          description: "Filtrer par devise"
          example: "XOF"
      responses:
        200:
          description: "Liste des pr√©f√©rences r√©cup√©r√©e avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPreferences'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 150
                      pages:
                        type: integer
                        example: 15
        401:
          description: "Non autoris√©"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/preferences/stats:
    get:
      tags:
        - Pr√©f√©rences
      summary: "üìà Statistiques des pr√©f√©rences (Admin)"
      description: "R√©cup√©rer les statistiques globales des pr√©f√©rences utilisateurs"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Statistiques r√©cup√©r√©es avec succ√®s"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalPreferences:
                        type: integer
                        description: "Nombre total de pr√©f√©rences"
                        example: 1250
                      langues:
                        type: object
                        description: "R√©partition par langue"
                        example:
                          fr: 800
                          en: 300
                          es: 150
                      devises:
                        type: object
                        description: "R√©partition par devise"
                        example:
                          XOF: 900
                          EUR: 200
                          USD: 150
                      themes:
                        type: object
                        description: "R√©partition par th√®me"
                        example:
                          light: 1000
                          dark: 200
                          auto: 50
                      notifications:
                        type: object
                        description: "R√©partition des notifications"
                        example:
                          email: 1200
                          push: 1100
                          sms: 800
        401:
          description: "Non autoris√©"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    UserPreferences:
      type: object
      properties:
        _id:
          type: string
          description: "ID unique des pr√©f√©rences"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
        utilisateurId:
          type: string
          description: "ID de l'utilisateur"
          example: "64f1a2b3c4d5e6f7g8h9i0j1"
        langue:
          type: string
          enum: [fr, en, es, de, it, pt]
          description: "Langue pr√©f√©r√©e"
          example: "fr"
        devise:
          type: string
          enum: [XOF, EUR, USD, GBP, CAD]
          description: "Devise pr√©f√©r√©e"
          example: "XOF"
        pays:
          type: string
          description: "Pays de l'utilisateur"
          example: "C√¥te d'Ivoire"
        fuseauHoraire:
          type: string
          description: "Fuseau horaire"
          example: "Africa/Abidjan"
        formatDate:
          type: string
          enum: [DD/MM/YYYY, MM/DD/YYYY, YYYY-MM-DD]
          description: "Format de date pr√©f√©r√©"
          example: "DD/MM/YYYY"
        formatHeure:
          type: string
          enum: [24h, 12h]
          description: "Format d'heure pr√©f√©r√©"
          example: "24h"
        notifications:
          type: object
          properties:
            email:
              type: boolean
              description: "Notifications par email"
              example: true
            push:
              type: boolean
              description: "Notifications push"
              example: true
            sms:
              type: boolean
              description: "Notifications SMS"
              example: false
        theme:
          type: string
          enum: [light, dark, auto]
          description: "Th√®me d'affichage"
          example: "light"
        confidentialite:
          type: object
          properties:
            profilPublic:
              type: boolean
              description: "Profil public"
              example: false
            partageDonnees:
              type: boolean
              description: "Partage des donn√©es"
              example: false
        createdAt:
          type: string
          format: date-time
          description: "Date de cr√©ation"
          example: "2024-01-15T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: "Date de derni√®re mise √† jour"
          example: "2024-01-15T10:30:00.000Z"
